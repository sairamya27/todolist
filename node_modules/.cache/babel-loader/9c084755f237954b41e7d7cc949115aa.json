{"ast":null,"code":"import _objectSpread from \"/Users/ramyakothapalli/Downloads/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/ramyakothapalli/Downloads/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/ramyakothapalli/Downloads/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ramyakothapalli/Downloads/todolist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  var _useState5 = useState({\n    id: \"\",\n    task: \"\",\n    completed: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      todo = _useState6[0],\n      setTodo = _useState6[1];\n\n  function addTodo(todo) {\n    setTodos([].concat(_toConsumableArray(todos), [todo]));\n    setCount(count + 1);\n  }\n\n  function toggleComplete(id) {\n    setTodos(todos.map(function (todo) {\n      if (todo.id === id) {\n        if (todo.completed) setCount(count + 1);else setCount(count - 1);\n        return _objectSpread(_objectSpread({}, todo), {}, {\n          completed: !todo.completed\n        });\n      }\n\n      return todo;\n    }));\n  }\n\n  function handleTaskInputChange(e) {\n    setTodo(_objectSpread(_objectSpread({}, todo), {}, {\n      task: e.target.value\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (todo.task.trim()) {\n      addTodo(_objectSpread(_objectSpread({}, todo), {}, {\n        id: uuidv4()\n      })); //reset task input\n\n      setTodo(_objectSpread(_objectSpread({}, todo), {}, {\n        task: \"\"\n      }));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"task\",\n        type: \"text\",\n        value: todo.task,\n        onChange: handleTaskInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [count, \" remaining out of \", todos.length, \" tasks\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: function onClick() {\n            return toggleComplete(item.id);\n          },\n          style: {\n            color: \"black\",\n            textDecoration: item.completed ? \"line-through\" : null\n          },\n          children: item.task\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3SSBLK/OkOY4I0VMxqLq5d+veGU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ramyakothapalli/Downloads/todolist/src/App.js"],"names":["React","useState","v4","uuidv4","App","todos","setTodos","count","setCount","id","task","completed","todo","setTodo","addTodo","toggleComplete","map","handleTaskInputChange","e","target","value","handleSubmit","preventDefault","trim","length","item","color","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function App() {\n  const [todos, setTodos] = useState([]);\n  const [count, setCount] = useState(0);\n  const [todo, setTodo] = useState({\n    id: \"\",\n    task: \"\",\n    completed: false\n  });\n\n  function addTodo(todo) {\n    setTodos([...todos, todo]);\n    setCount(count + 1);\n  }\n  function toggleComplete(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          if (todo.completed) setCount(count + 1);\n          else setCount(count - 1);\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n        return todo;\n      })\n    );\n  }\n\n  function handleTaskInputChange(e) {\n    setTodo({ ...todo, task: e.target.value });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (todo.task.trim()) {\n      addTodo({ ...todo, id: uuidv4() });\n      //reset task input\n      setTodo({ ...todo, task: \"\" });\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"task\"\n          type=\"text\"\n          value={todo.task}\n          onChange={handleTaskInputChange}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n      <p>\n        {count} remaining out of {todos.length} tasks{\" \"}\n      </p>\n      <ul>\n        {todos.map((item) => (\n          <li\n            key={item.id}\n            onClick={() => toggleComplete(item.id)}\n            style={{\n              color: \"black\",\n              textDecoration: item.completed ? \"line-through\" : null\n            }}\n          >\n            {item.task}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}